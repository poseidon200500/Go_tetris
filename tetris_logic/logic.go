package t_logic

import "go_tetris/figure_struct"

var vertical, horizontal int = 10, 20
var field [20][10]int = [20][10]int{
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	{-1, 1, 1, -1, 1, 1, 1, -1, -1, -1},
	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1}}

/*
На вход мы получаем матрицу-поле и координаты фигуры(матрица не содержит падающую фигуру)
Если падающая фигура не соприкасается с фигурами поля, изменяются только координаты фигуры,
иначе текущая фигура прикрепляется к фигурам поля и запускается удаление заполненных слоёв
*/
func Next_gen(field [10][20]int, figure figure_struct.Figure) [10][20]int {
	return field
}

/*
Функция проходит по слоям марицы (по горизонтали) и если встречает заполненный слой уничтожает его

На вход подаётс матрица с учётом, что координата (0,0) совпадает с field[0][0], возможно потребуется
перевернуть матрицу
*/
func find_ful_row(field [10][20]int) int {
	row_ind := -1
	null_row := true

	for j := 0; j < horizontal; j++ {
		minus_row := true
		for i := 0; i < vertical; i++ {
			if field[i][j] != 0 {
				null_row = false
				break
			}
			if field[i][j] != -1 {
				null_row = false
			}
		}

		if null_row {
			row_ind = j
			break
		} else if minus_row {
			break
		}
	}
	return -1
}

func del_ful_row(field [10][20]int, row int) [10][20]int {
	for j := row; j < horizontal; j++ {
		for i := 0; i < vertical; i++ {

		}
	}
	return field
}

func main() {

}
